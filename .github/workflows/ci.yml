name: Data Portal

on:
  schedule:
    - cron: "0 14 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  portal:
    name: Portal
    runs-on: ubuntu-latest
    env:
      SPACESCOPE_TOKEN: ${{ secrets.SPACESCOPE_TOKEN }}
      DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
      motherduck_token: ${{ secrets.motherduck_token }}
      DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENCODED_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ENCODED_GOOGLE_APPLICATION_CREDENTIALS }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Install Python 3.12
        run: uv python install 3.12

      - name: Run
        run: make run

      - name: Install Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Render
        run: make render

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: fbe814d4a37d3d3d7fcfeec0ab929ff6
          projectName: filecoindataportal
          directory: portal/.quarto/_site
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: main

  data:
    name: Data
    needs: portal
    runs-on: ubuntu-latest
    env:
      SPACESCOPE_TOKEN: ${{ secrets.SPACESCOPE_TOKEN }}
      DATABASE_PATH: ${{ secrets.DATABASE_PATH }}
      motherduck_token: ${{ secrets.motherduck_token }}
      DUNE_API_KEY: ${{ secrets.DUNE_API_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      ENCODED_GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.ENCODED_GOOGLE_APPLICATION_CREDENTIALS }}
      R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
      R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
      R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
      R2_BUCKET: ${{ secrets.R2_BUCKET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Install Python 3.12
        run: uv python install 3.12

      - name: Export Tables
        run: make tables

      - name: Upload to R2
        uses: ryand56/r2-upload-action@latest
        with:
          r2-account-id: ${{ secrets.R2_ACCOUNT_ID }}
          r2-access-key-id: ${{ secrets.R2_ACCESS_KEY_ID }}
          r2-secret-access-key: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          r2-bucket: ${{ secrets.R2_BUCKET }}
          source-dir: data/tables/
          destination-dir: ./
